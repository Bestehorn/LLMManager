name: Release to PyPI

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .[dev]
    
    - name: Run tests
      run: |
        pytest test/bestehorn_llmmanager/ -v --cov=bestehorn_llmmanager --cov-report=xml --ignore=test/integration/
    
    - name: Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        fail_ci_if_error: false
        verbose: true

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      # Required for PyPI Trusted Publishing
      id-token: write
      # Required for creating GitHub releases
      contents: write
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade build twine pkginfo
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: |
        twine check dist/*
        ls -la dist/
    
    - name: Publish to Test PyPI
      uses: pypa/gh-action-pypi-publish@v1.12.2
      with:
        repository-url: https://test.pypi.org/legacy/
        skip-existing: true
    
    - name: Publish to PyPI
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
      uses: pypa/gh-action-pypi-publish@v1.12.2
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        files: dist/*
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
